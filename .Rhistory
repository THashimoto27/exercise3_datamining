dengue <- read.csv('dengue.csv')
head(dengue)
dengue_tree = rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=dengue)
library(rpart)
library(rpart.plot)
dengue_tree = rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=dengue)
rpart.plot(dengue_tree, type=4, extra=4)
rpart.plot(dengue_tree, type=4, extra=3)
rpart.plot(dengue_tree, type=4)
print(dengue_tree) # the structure
summary(dengue_tree)  # more detail on the splits
predict(dengue_tree, newdata=dengue_tree)
predict(dengue_tree, newdata=dengue)
dengue_folds = crossv_kfold(dengue, k=K_folds)
K_folds = 5
dengue_folds = crossv_kfold(dengue, k=K_folds)
dengue_folds = crossv_kfold(dengue, k=K_folds)
library("purrr")
dengue_folds = crossv_kfold(dengue, k=K_folds)
library("purrr")
library("dplyr")
dengue_folds = crossv_kfold(dengue, k=K_folds)
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)    # alternatively, this also loads %>%
library(knitr)
library(tidyverse)
library(sjmisc)
library(ggplot2)
library(reshape2)
library(gapminder)
library(mosaic)
library(extraDistr)
library(caret)
library(modelr)
library(parallel)
library(foreach)
library(rsample)
library(lubridate)
library(olsrr)
library(rpart)
library(rpart.plot)
dengue_folds = crossv_kfold(dengue, k=K_folds)
View(dengue_folds)
model_cart_cv = map(saratoga_folds$train, ~ rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=.))
model_cart_cv = map(dengue_folds$train, ~ rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=.))
View(model_cart_cv)
dengue <- read.csv('dengue.csv')
dengue_tree = rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=dengue)
rpart.plot(dengue_tree, type=4)
print(dengue_tree) # the structure
summary(dengue_tree)  # more detail on the splits
predict(dengue_tree, newdata=dengue)
K_folds = 5
dengue_folds = crossv_kfold(dengue, k=K_folds)
cart_cv = map(dengue_folds$train, ~ rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=.))
forest_cv = map(dengue_folds$train,~randomForest(boarding ~ day + temperature + min_of_day + precipYes + inSemester,
data=.))
cart_cv = map(dengue_folds$train, ~ rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=.))
forest_cv = map(dengue_folds$train,~randomForest(boarding ~ day + temperature + min_of_day + precipYes + inSemester,data=.))
library(randomForest)
library(gbm)
dengue <- read.csv('dengue.csv')
dengue_tree = rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=dengue)
rpart.plot(dengue_tree, type=4)
print(dengue_tree) # the structure
summary(dengue_tree)  # more detail on the splits
predict(dengue_tree, newdata=dengue)
K_folds = 5
dengue_folds = crossv_kfold(dengue, k=K_folds)
cart_cv = map(dengue_folds$train, ~ rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=.))
forest_cv = map(dengue_folds$train,~randomForest(boarding ~ day + temperature + min_of_day + precipYes + inSemester,data=.))
cart_cv = map(dengue_folds$train, ~ rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=.))
forest_cv = map(dengue_folds$train,~randomForest(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt,data=.))
cart_cv = map(dengue_folds$train, ~ rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=.))
forest_cv = map(dengue_folds$train,~randomForest(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt,data=.))
boost_cv = map(dengue_folds$train,~gbm(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt,
data = ., interaction.depth=4, n.trees=500, shrinkage=.05))
rlang::last_error()
forest_cv = map(dengue_folds$train,~randomForest(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt,data=.))
rlang::last_error()
rmse_cart_cv = mean(map2_dbl(cart_cv, dengue_folds$train, modelr::rmse))
forest_cv = map(dengue_folds$train,~randomForest(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt,data=.))
forest_cv = map(dengue_folds$train,~randomForest(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt,data=.))
forest_cv = map(dengue_folds$train,~randomForest(total_cases ~ specific_humidity+tdtr_k+precipitation_amt,data=.))
forest_cv = map(dengue_folds$train,~randomForest(total_cases ~ city ,data=.))
forest_cv = map(dengue_folds$train,~randomForest(total_cases ~ city + season ,data=.))
forest_cv = map(dengue_folds$train,~randomForest(total_cases ~ city + season + specific_humidity,data=.))
View(dengue)
dengue %>% drop_na()
dengue <- read.csv('dengue.csv')
dengue %>% drop_na()
dengue_tree = rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=dengue)
rpart.plot(dengue_tree, type=4)
print(dengue_tree) # the structure
summary(dengue_tree)  # more detail on the splits
predict(dengue_tree, newdata=dengue)
K_folds = 5
dengue_folds = crossv_kfold(dengue, k=K_folds)
cart_cv = map(dengue_folds$train, ~ rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=.))
forest_cv = map(dengue_folds$train,~randomForest(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt,data=.))
View(dengue)
dengue %>% drop_na()
dengue <- read.csv('dengue.csv')
dengue = dengue %>% drop_na()
dengue_tree = rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=dengue)
rpart.plot(dengue_tree, type=4)
print(dengue_tree) # the structure
summary(dengue_tree)  # more detail on the splits
predict(dengue_tree, newdata=dengue)
K_folds = 5
dengue_folds = crossv_kfold(dengue, k=K_folds)
cart_cv = map(dengue_folds$train, ~ rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=.))
forest_cv = map(dengue_folds$train,~randomForest(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt,data=.))
boost_cv = map(dengue_folds$train,~gbm(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt,
data = ., interaction.depth=4, n.trees=500, shrinkage=.05))
dengue <- read.csv('dengue.csv')
dengue = dengue %>% drop_na()
dengue$city = factor(dengue$city)
dengue$season = factor(dengue$season)
dengue_tree = rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=dengue)
rpart.plot(dengue_tree, type=4)
print(dengue_tree) # the structure
summary(dengue_tree)  # more detail on the splits
predict(dengue_tree, newdata=dengue)
K_folds = 5
dengue_folds = crossv_kfold(dengue, k=K_folds)
cart_cv = map(dengue_folds$train, ~ rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=.))
forest_cv = map(dengue_folds$train,~randomForest(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt,data=.))
boost_cv = map(dengue_folds$train,~gbm(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt,
data = ., interaction.depth=4, n.trees=500, shrinkage=.05))
rmse_cart_cv = mean(map2_dbl(cart_cv, dengue_folds$train, modelr::rmse))
rmse_forest_cv = mean(map2_dbl(forest_cv, dengue_folds$train, modelr::rmse))
rmse_boost_cv = mean(map2_dbl(boost_cv, dengue_folds$train, modelr::rmse))
plot(boost_cv, 'specific_humidity')
cart = rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=dengue_folds$train)
cart = rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=dengue_folds$train)
cart = rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=dengue)
plot(cart, 'specific_humidity')
p1 = pdp::partial(cart, pred.var = 'specific_humidity', n.trees=350)
p1
p1 = pdp::partial(cart, pred.var = 'specific_humidity')
plot(p1)
library(rsample)
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)    # alternatively, this also loads %>%
library(knitr)
library(tidyverse)
library(sjmisc)
library(ggplot2)
library(reshape2)
library(gapminder)
library(mosaic)
library(extraDistr)
library(caret)
library(modelr)
library(parallel)
library(foreach)
library(rsample)
library(lubridate)
library(olsrr)
library(rpart)
library(rpart.plot)
library(randomForest)
library(gbm)
dengue <- read.csv('dengue.csv')
dengue = dengue %>% drop_na()
dengue$city = factor(dengue$city)
dengue$season = factor(dengue$season)
dengue_tree = rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=dengue)
rpart.plot(dengue_tree, type=4)
print(dengue_tree) # the structure
summary(dengue_tree)  # more detail on the splits
predict(dengue_tree, newdata=dengue)
K_folds = 5
dengue_folds = crossv_kfold(dengue, k=K_folds)
cart_cv = map(dengue_folds$train, ~ rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=.))
forest_cv = map(dengue_folds$train,~randomForest(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt,data=.))
boost_cv = map(dengue_folds$train,~gbm(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt,
data = ., interaction.depth=4, n.trees=500, shrinkage=.05))
rmse_cart_cv = mean(map2_dbl(cart_cv, dengue_folds$train, modelr::rmse))
rmse_forest_cv = mean(map2_dbl(forest_cv, dengue_folds$train, modelr::rmse))
rmse_boost_cv = mean(map2_dbl(boost_cv, dengue_folds$train, modelr::rmse))
cart = rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=dengue)
p1 = pdp::partial(cart, pred.var = 'specific_humidity')
plot(p1)
plot(boost1, 'day')
cart = rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=dengue)
p1 = pdp::partial(cart, pred.var = 'specific_humidity')
plot(p1)
plot(cart,'specific_humidity')
plot(cart,'specific_humidity')
plot(cart,'specific_humidity')
boost=gbm(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data = dengue, interaction.depth=4, n.trees=500, shrinkage=.05)
plot(boost, 'specific_humidity')
plot(cart,'specific_humidity')
plot(p1)
cart_cv = map(dengue_folds$train, ~ rpart(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt, data=.))
forest_cv = map(dengue_folds$train,~randomForest(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt,data=.))
boost_cv = map(dengue_folds$train,~gbm(total_cases ~ city + season + specific_humidity+tdtr_k+precipitation_amt,
data = ., interaction.depth=4, n.trees=500, shrinkage=.05))
rmse_cart_cv = mean(map2_dbl(cart_cv, dengue_folds$train, modelr::rmse))
rmse_forest_cv = mean(map2_dbl(forest_cv, dengue_folds$train, modelr::rmse))
rmse_boost_cv = mean(map2_dbl(boost_cv, dengue_folds$train, modelr::rmse))
View(dengue)
dengue <- read.csv('greenbuildings.csv')
greenbuildings <- read.csv('greenbuildings.csv')
View(greenbuildings)
greenbuildings <- read.csv('greenbuildings.csv')
head(greenbuildings)
View(greenbuildings)
greenbuildings %>% mutate(rps=Rent*leasing_rate)
greenbuildings=greenbuildings %>% mutate(rps=Rent*leasing_rate)
View(greenbuildings)
38.56*91.39
View(greenbuildings)
View(greenbuildings)
data <- greenbuildings[2:24]
data <- greenbuildings[2:24]
scale_train = apply(data, 2, sd)
data_tilde = scale(data , scale = scale_train) %>% as.data.frame
all_polym2 <- function (dataset){
result <- dataset
for (i in 1:ncol(dataset)){
for (j in i:ncol(dataset)){
if(j==i){
tmp = as.data.frame(dataset[,j]^2)
colnames(tmp) <- paste(colnames(dataset[j]),"sq")
}else
{
tmp = as.data.frame(dataset[,i] * dataset[,j])
colnames(tmp) <- paste(colnames(dataset[i]),"_",colnames(dataset[j]))
}
result <- as.data.frame(c(result,tmp))
}
}
return(result)
}
data_cv <- as.data.frame(c(all_polym2(data_tilde)))
K_folds = 5
gb_folds = crossv_kfold(data_cv, k=K_folds)
library(gamlr)
semiconductor = read.csv("../data/semiconductor.csv")
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)    # alternatively, this also loads %>%
library(knitr)
library(tidyverse)
library(sjmisc)
library(ggplot2)
library(reshape2)
library(gapminder)
library(mosaic)
library(extraDistr)
library(caret)
library(modelr)
library(parallel)
library(foreach)
library(rsample)
library(lubridate)
library(olsrr)
library(rpart)
library(rpart.plot)
library(randomForest)
library(gbm)
greenbuildings <- read.csv('greenbuildings.csv')
greenbuildings=greenbuildings %>% mutate(rps=Rent*leasing_rate)
data <- greenbuildings[2:24]
scale_train = apply(data, 2, sd)
data_tilde = scale(data , scale = scale_train) %>% as.data.frame
View(greenbuildings)
lm_medium = lm(rps ~ ., data=data)
lm_step = step(lm_medium, scope=~(.)^2)
View(data)
scx=model.matrix(rps ~ .-1, data=data)
scy = data$rps
sclasso = gamlr(scx, scy, family="binomial")
library(gamlr)
scx=model.matrix(rps ~ .-1, data=data)
scy = data$rps
sclasso = gamlr(scx, scy, family="binomial")
View(scx)
View(greenbuildings)
View(greenbuildings)
greenbuildings=greenbuildings[-green_rating]
greenbuildings=greenbuildings(-green_rating)
greenbuildings=greenbuildings[-green_rating]
View(greenbuildings)
head(greenbuildings)
greenbuildings=greenbuildings[-green_rating]
greenbuildings=greenbuildings[,-green_rating]
greenbuildings=greenbuildings[,-"green_rating"]
greenbuildings=greenbuildings %>% mutate(rps=Rent*leasing_rate)
greenbuildings$green_rating <- NULL
View(greenbuildings)
scx=model.matrix(rps ~ .-1, data=data)
scy = data$rps
sclasso = gamlr(scx, scy, family="binomial")
scx=model.matrix(rps ~ .-1, data=data)
scy = data$rps
sclasso = gamlr(scx, scy, family="binomial")
data <- greenbuildings[2:24]
data <- greenbuildings[2:23]
scx=model.matrix(rps ~ .-1, data=data)
scy = data$rps
sclasso = gamlr(scx, scy, family="binomial")
scx=model.matrix(rps ~ .-1, data=data)
scy = data$rps
sclasso = gamlr(scx, scy, family="binomial")
View(scx)
greenbuildings <- read.csv('greenbuildings.csv')
greenbuildings=greenbuildings %>% mutate(rps=Rent*leasing_rate)
greenbuildings$green_rating <- NULL
greenbuildings$Rent <- NULL
greenbuildings$leasing_rate <- NULL
data <- greenbuildings[2:21]
scx=model.matrix(rps ~ .-1, data=data)
scy = data$rps
sclasso = gamlr(scx, scy, family="binomial")
# fit a single lasso
sclasso = gamlr(scx, scy, family="binomial")
scx=model.matrix(rps ~ ., data=data)
scy = data$rps
sclasso = gamlr(scx, scy, family="binomial")
scx=model.matrix(rps ~ .-1, data=data)
scy = data$rps
sclasso = gamlr(scx, scy, family="binomial")
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)    # alternatively, this also loads %>%
library(knitr)
library(tidyverse)
library(sjmisc)
library(ggplot2)
library(reshape2)
library(gapminder)
library(mosaic)
library(extraDistr)
library(caret)
library(modelr)
library(parallel)
library(foreach)
library(rsample)
library(lubridate)
library(olsrr)
library(rpart)
library(rpart.plot)
library(randomForest)
library(gbm)
library(gamlr)
greenbuildings <- read.csv('greenbuildings.csv')
greenbuildings=greenbuildings %>% mutate(rps=Rent*leasing_rate)
greenbuildings$green_rating <- NULL
greenbuildings$Rent <- NULL
greenbuildings$leasing_rate <- NULL
data <- greenbuildings[2:21]
View(greenbuildings)
View(data)
scx=model.matrix(rps ~ .-1, data=data)
scy = data$rps
sclasso = gamlr(scx, scy, family="binomial")
n = nrow(data)
sclasso = gamlr(scx, scy, family="binomial")
View(data)
View(scx)
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)    # alternatively, this also loads %>%
library(knitr)
library(tidyverse)
library(sjmisc)
library(ggplot2)
library(reshape2)
library(gapminder)
library(mosaic)
library(extraDistr)
library(caret)
library(modelr)
library(parallel)
library(foreach)
library(rsample)
library(lubridate)
library(olsrr)
library(rpart)
library(rpart.plot)
library(randomForest)
library(gbm)
library(gamlr)
greenbuildings <- read.csv('greenbuildings.csv')
greenbuildings=greenbuildings %>% mutate(rps=Rent*leasing_rate)
greenbuildings$green_rating <- NULL
greenbuildings$Rent <- NULL
greenbuildings$leasing_rate <- NULL
data <- greenbuildings[2:21]
scx=model.matrix(rps ~ .-1, data=data)
row(scx)
View(scx)
data <- as.data.frame(greenbuildings[2:21])
scx=model.matrix(rps ~ .-1, data=data)
row(scx)
